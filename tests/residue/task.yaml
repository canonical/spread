summary: Test downloading of residual task data.

prepare: |
    touch /run/spread-reuse.yaml
    ln -s /run/spread-reuse.yaml .spread-reuse.yaml

restore:
    rm -rf residue
    rm -f .spread-reuse.yaml /run/spread-reuse.yaml

execute: |
    # Works even with different variants producing different data.
    FAIL_CHECK=0 spread -v -reuse -resend -residue=./residue

    # Print the whole fs tree for the test
    tree

    cat residue/lxd:ubuntu-16.04:checks/main:a/one.txt | grep one-a
    cat residue/lxd:ubuntu-16.04:checks/main:a/two.txt | grep two-a,b

    cat residue/lxd:ubuntu-16.04:checks/main:b/one.txt | grep one-b
    cat residue/lxd:ubuntu-16.04:checks/main:b/two.txt | grep two-a,b

    ls residue/ | wc -l | grep 1
    ls residue/lxd:ubuntu-16.04:checks/ | wc -l | grep 2
    ls residue/lxd:ubuntu-16.04:checks/main:a/ | wc -l | grep 2

    rm -rf residue/

    # On failures, downloads whatever partial data is available.
    if FAIL_CHECK=1 spread -v -reuse -resend -residue=./residue; then
        echo 'Expected spread to fail with $FAIL_CHECK set to 1.'
        exit 1
    fi

    # Print the whole fs tree for the test
    tree

    cat residue/lxd:ubuntu-16.04:checks/main:a/one.txt | grep one-a
    cat residue/lxd:ubuntu-16.04:checks/main:b/one.txt | grep one-b

    test ! -f residue/lxd:ubuntu-16.04:checks/main:a/two.txt
    test ! -f residue/lxd:ubuntu-16.04:checks/main:b/two.txt

    rm -rf residue/

    # Without -residual, nothing happens.
    FAIL_CHECK=0 spread -v -reuse -resend

    # Print the whole fs tree for the test
    tree

    test ! -e residue/

debug: |
    find residue/
